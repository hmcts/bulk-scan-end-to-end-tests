plugins {
  id 'application'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'org.owasp.dependencycheck' version '8.2.1'
  id 'com.github.ben-manes.versions' version '0.47.0'
  id 'org.sonarqube' version '4.2.1.3168'
}

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
    }
  }

}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

tasks.withType(JavaExec).configureEach {
  javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

test {
  failFast = true
}

task functional(type: Test) {
  description = "Runs functional tests"
  group = "Verification"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
  useJUnitPlatform()
  testLogging {
    exceptionFormat = 'full'
  }
}

checkstyle {
  maxWarnings = 0
  toolVersion = '9.3'
  getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

pmd {
  toolVersion = "6.55.0"
  ignoreFailures = true
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  // https://github.com/pmd/pmd/issues/876
  ruleSets = []
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

jacocoTestReport {
  executionData(test)
  reports {
    xml.enabled = true
    csv.enabled = false
    xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

sonarqube {
  properties {
    property "sonar.projectName", "Reform :: bulk-scan-end-to-end-tests"
    property "sonar.projectKey", "uk.gov.hmcts.reform:bulk-scan-end-to-end-tests"
    property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
  }
}

// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
  suppressionFile = 'config/owasp/suppressions.xml'

  analyzers {
    // Disable scanning of .NET related binaries
    assemblyEnabled = false
  }
}

dependencyManagement {
  dependencies {
    // CVE-2018-10237 - Unbounded memory allocation
    dependencySet(group: 'com.google.guava', version: '32.0.1-jre') {
      entry 'guava'
    }
    // avoid CVE-2021-29425
    dependencySet(group: 'commons-io', version: '2.13.0') {
      entry 'commons-io'
    }
    // CVE-2020-36518
    dependencySet(group: 'com.fasterxml.jackson.core', version: '2.15.2') {
      entry 'jackson-databind'
    }
    // CVE-2022-25647
    dependencySet(group: 'com.google.code.gson', version: '2.10.1') {
      entry 'gson'
    }
    //CVE-2022-24823
    dependencySet(group: 'io.netty', version: '4.1.94.Final') {
      entry 'netty-buffer'
      entry 'netty-codec'
      entry 'netty-codec-dns'
      entry 'netty-codec-http'
      entry 'netty-codec-http2'
      entry 'netty-codec-socks'
      entry 'netty-common'
      entry 'netty-handler'
      entry 'netty-handler-proxy'
      entry 'netty-resolver'
      entry 'netty-resolver-dns'
      entry 'netty-resolver-dns-classes-macos'
      entry 'netty-resolver-dns-native-macos'
      entry 'netty-transport'
      entry 'netty-transport-classes-epoll'
      entry 'netty-transport-classes-kqueue'
      entry 'netty-transport-native-epoll'
      entry 'netty-transport-native-kqueue'
      entry 'netty-transport-native-unix-common'
    }
    // CVE-2022-31684
    dependencySet(group: 'io.projectreactor.netty', version: '1.1.8') {
      entry 'reactor-netty'
      entry 'reactor-netty-http'
    }
  }
}

repositories {
  mavenLocal()
  jcenter()
  mavenCentral()
}

def versions = [
  junit        : '5.7.2',
  junitPlatform: '1.7.2',
]

ext.libraries = [
  junit5: [
    "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-params:${versions.junit}",
    "org.junit.platform:junit-platform-commons:${versions.junitPlatform}",
    "org.junit.platform:junit-platform-engine:${versions.junitPlatform}"
  ]
]

dependencies {

  implementation group: 'com.azure', name: 'azure-storage-blob', version: '12.22.3'
  implementation group: 'com.google.guava', name: 'guava', version: '32.0.1-jre'
  implementation group: 'commons-io', name: 'commons-io', version: '2.13.0'

  testImplementation libraries.junit5
  testImplementation group: 'uk.gov.hmcts.reform', name: 'core-case-data-store-client', version: '4.7.6', {
    exclude group: 'org.springframework.cloud', module: 'spring-cloud-starter-openfeign'
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-actuator'
    exclude group: 'io.github.openfeign', module: 'feign-jackson'
  }


  functionalTestImplementation sourceSets.main.runtimeClasspath
  functionalTestImplementation sourceSets.test.runtimeClasspath

  functionalTestImplementation group: 'com.typesafe', name: 'config', version: '1.4.2'
  functionalTestImplementation group: 'org.assertj', name: 'assertj-core', version: '3.24.2'
  functionalTestImplementation group: 'io.rest-assured', name: 'rest-assured', version: '5.3.1'
  functionalTestImplementation group: 'com.jayway.awaitility', name: 'awaitility', version: '1.7.0'
  functionalTestImplementation group: 'com.warrenstrange', name: 'googleauth', version: '1.5.0'
}

mainClassName = 'uk.gov.hmcts.reform.bulkscan.endtoendtests.Application'

wrapper {
  distributionType = Wrapper.DistributionType.ALL
}
